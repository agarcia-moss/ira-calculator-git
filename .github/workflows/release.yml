name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (e.g., v1.0.0)'
        required: true

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref }}
          release_name: Release ${{ github.event.inputs.tag || github.ref }}
          draft: true
          prerelease: false
          body: |
            ## Changes in this Release
            
            ### Features
            - Feature 1
            - Feature 2
            
            ### Bug Fixes
            - Fix 1
            - Fix 2
            
            ### Breaking Changes
            - None
            
            ---
            
            ## Installation
            
            Download the appropriate installer for your platform below:
            - **Windows**: `IRA-Calculator-Setup-*.exe` (NSIS installer)
            - **macOS**: `IRA-Calculator-*.dmg` (Universal binary for Intel and Apple Silicon)
            - **Linux**: `IRA-Calculator-*.AppImage` or `ira-calculator_*.deb`

  build:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build-electron-prod

      # Linux specific setup
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0 libnotify4 libnss3 libxss1 libxtst6 xdg-utils libatspi2.0-0 libdrm2 libgbm1 libxcb-dri3-0 libxkbcommon0 libgtk-3-0

      # Build Electron app
      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ matrix.platform }}" = "mac" ]; then
            npm run dist:mac
          elif [ "${{ matrix.platform }}" = "win" ]; then
            npm run dist:win
          else
            npm run dist:linux
          fi
        shell: bash

      # Upload Windows artifacts
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/IRA Calculator Setup ${{ github.event.inputs.tag || github.ref_name }}.exe
          asset_name: IRA-Calculator-Setup-${{ github.event.inputs.tag || github.ref_name }}.exe
          asset_content_type: application/x-msdownload

      - name: Upload Windows artifacts (portable)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/IRA Calculator ${{ github.event.inputs.tag || github.ref_name }}.exe
          asset_name: IRA-Calculator-${{ github.event.inputs.tag || github.ref_name }}-portable.exe
          asset_content_type: application/x-msdownload
        continue-on-error: true

      # Upload macOS artifacts
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/IRA Calculator-${{ github.event.inputs.tag || github.ref_name }}.dmg
          asset_name: IRA-Calculator-${{ github.event.inputs.tag || github.ref_name }}.dmg
          asset_content_type: application/x-apple-diskimage

      - name: Upload macOS ARM artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/IRA Calculator-${{ github.event.inputs.tag || github.ref_name }}-arm64.dmg
          asset_name: IRA-Calculator-${{ github.event.inputs.tag || github.ref_name }}-arm64.dmg
          asset_content_type: application/x-apple-diskimage
        continue-on-error: true

      # Upload Linux artifacts
      - name: Upload Linux AppImage
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/IRA Calculator-${{ github.event.inputs.tag || github.ref_name }}.AppImage
          asset_name: IRA-Calculator-${{ github.event.inputs.tag || github.ref_name }}.AppImage
          asset_content_type: application/x-executable

      - name: Upload Linux deb
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/ira-calculator_${{ github.event.inputs.tag || github.ref_name }}_amd64.deb
          asset_name: ira-calculator_${{ github.event.inputs.tag || github.ref_name }}_amd64.deb
          asset_content_type: application/x-debian-package

      # Upload auto-update files
      - name: Upload latest.yml (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/latest.yml
          asset_name: latest.yml
          asset_content_type: text/yaml

      - name: Upload latest-mac.yml (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/latest-mac.yml
          asset_name: latest-mac.yml
          asset_content_type: text/yaml

      - name: Upload latest-linux.yml (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: dist/latest-linux.yml
          asset_name: latest-linux.yml
          asset_content_type: text/yaml
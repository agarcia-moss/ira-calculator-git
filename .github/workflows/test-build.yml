name: Test Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test-build:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint || true
        continue-on-error: true

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

      - name: Build React app
        env:
          CI: false
        run: npm run build

      - name: Test Electron build for macOS
        env:
          CI: false
        run: |
          npm run build-electron-prod
          npm run dist:mac -- --publish=never

      - name: Verify build artifacts
        run: |
          echo "Checking for Intel build..."
          ls -la "dist/IRA Calculator-"*"-x64.dmg" || echo "Intel DMG not found"
          echo "Checking for Apple Silicon build..."
          ls -la "dist/IRA Calculator-"*"-arm64.dmg" || echo "ARM64 DMG not found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: matrix.node-version == 18
        with:
          name: test-builds-macos
          path: |
            dist/*.dmg
            dist/*.zip
          retention-days: 7